# -*- mode: ruby -*-
# vim: set ft=ruby :
#
# Generated with xnlogic gem version <%= Xnlogic::VERSION %>

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Include config from config/settings.yml
  require 'yaml'
  current_folder = File.expand_path(File.dirname(__FILE__))
  app_name = '<%= config[:name] %>'

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "xnlogic/xn-ubuntu1404"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 8080, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.168.168"

  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
  config.ssh.forward_agent = true

  # Set up NFS mount.
  nfs_setting = RUBY_PLATFORM =~ /darwin/ || RUBY_PLATFORM =~ /linux/ || Vagrant.has_plugin?("vagrant-winnfsd")  

  # Setup auxiliary synced folder
  if nfs_setting
    config.vm.synced_folder Dir.pwd, "/home/vagrant/" + app_name, create: true, id: app_name, :nfs => true, :mount_options => ['nolock,vers=3,udp']
    if Dir.exists? "../#{app_name}-compiled"
      config.vm.synced_folder "../#{app_name}-compiled", "/home/vagrant/#{app_name}-compiled", create: true, id: "#{app_name}-compiled", :nfs => true, :mount_options => ['nolock,vers=3,udp']
    end
  else
    config.vm.synced_folder Dir.pwd, "/home/vagrant/" + app_name, create: true, id: app_name
    if Dir.exists? "../#{app_name}-compiled"
      config.vm.synced_folder "../#{app_name}-compiled", "/home/vagrant/#{app_name}-compiled", create: true, id: "#{app_name}-compiled"
    end
  end
  
  # Allow caching to be used (see the vagrant-cachier plugin)
  if Vagrant.has_plugin?("vagrant-cachier")
    config.cache.synced_folder_opts = { 
        type: :nfs,
        mount_options: ['rw', 'vers=3', 'tcp', 'nolock'] 
    }
    config.cache.scope = :box
    config.cache.auto_detect = true
  end

  # Manage vbguest update
  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.auto_update = false
    config.vbguest.no_remote = true
  end

  config.vm.provider "virtualbox" do |vb|
    # boot with headless mode
    vb.gui = false
<% if config[:vm_memory] -%>
    vb.customize ["modifyvm", :id, "--memory", '<%= config[:vm_memory] %>']
<% else -%>
    vb.customize ["modifyvm", :id, "--memory", '2048']
<% end -%>
<% if config[:vm_cpus] -%>
    vb.customize ["modifyvm", :id, "--cpus", <%= config[:vm_cpus] %>]
<% else -%>
    vb.customize ["modifyvm", :id, "--cpus", 2]
<% end -%>
  end

  config.vm.provider "vmware_fusion" do |vmwf|
    # boot with headless mode
    vmwf.gui = false                
<% if config[:vm_memory] -%>
    vmwf.vmx["memsize"] = '<%= config[:vm_memory] %>'
<% else -%>
    vmwf.vmx["memsize"] = '2048'
<% end -%>
<% if config[:vm_cpus] -%>
    vmwf.vmx["numvcpus"] = <%= config[:vm_cpus] %>
<% else -%>
    vmwf.vmx["numvcpus"] = 2
<% end -%>
  end

  config.vm.provision "shell" do |s|
    s.path = "config/vagrant.provision"
    s.privileged = false
  end

  config.vm.provision "shell", run: 'always' do |s|
    s.path = "config/vagrant.up"
    s.privileged = false
  end
end
